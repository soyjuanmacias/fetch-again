{"version":3,"file":"fetch-again.js","sources":["../index.js"],"sourcesContent":["const environment = (typeof module !== 'undefined' && module.exports) ? global : window;\r\n\r\n(function checkForFetch() {\r\n    const polyfillUrl = 'https://github.com/github/fetch';\r\n    if (!environment || !environment.fetch) {\r\n        throw new Error(`Seems that fetch is not supported in your environment, take a look at the polyfill here: ${polyfillUrl}`);\r\n    }\r\n})();\r\n\r\nenvironment.fetchAgain = function fetchAgain(url, fetchOptions = {}, requestLimit = 1, retryDelay = 1000) {\r\n    if (requestLimit < 1) {\r\n        throw new Error('Invalid arguments: requestLimit should be at least 1.');\r\n    }\r\n    if (retryDelay < 1) {\r\n        throw new Error('Invalid arguments: delay should be at least 1.');\r\n    }\r\n\r\n    function callFetch() {\r\n        return environment.fetch(url, fetchOptions);\r\n    }\r\n\r\n    if (requestLimit === 1) {\r\n        return callFetch();\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        function success(response) {\r\n            resolve(response);\r\n        }\r\n        function failure(error) {\r\n            requestLimit--;\r\n            if (requestLimit) {\r\n                setTimeout(callFetchAgain, retryDelay)\r\n            }\r\n            else {\r\n                reject(error);\r\n            }\r\n        }\r\n        function finalFailure(finalError) {\r\n            reject(finalError);\r\n        }\r\n        function callFetchAgain() {\r\n            return callFetch()\r\n                .then(success)\r\n                .catch(failure)\r\n                .catch(finalFailure);\r\n        }\r\n        callFetchAgain();\r\n    });\r\n}\r\n\r\nexport default fetchAgain;\r\n\r\n"],"names":["environment","module","exports","global","window","checkForFetch","polyfillUrl","fetch","Error","fetchAgain","url","fetchOptions","requestLimit","retryDelay","callFetch","Promise","resolve","reject","success","response","failure","error","callFetchAgain","finalFailure","finalError","then","catch"],"mappings":"AAAA,IAAMA,cAAe,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,OAAzC,GAAoDC,MAApD,GAA6DC,MAAjF;;AAEA,CAAC,SAASC,aAAT,GAAyB;QAChBC,cAAc,iCAApB;QACI,CAACN,WAAD,IAAgB,CAACA,YAAYO,KAAjC,EAAwC;cAC9B,IAAIC,KAAJ,+FAAsGF,WAAtG,CAAN;;CAHR;;AAOAN,YAAYS,UAAZ,GAAyB,SAASA,UAAT,CAAoBC,GAApB,EAAiF;QAAxDC,YAAwD,uEAAzC,EAAyC;QAArCC,YAAqC,uEAAtB,CAAsB;QAAnBC,UAAmB,uEAAN,IAAM;;QAClGD,eAAe,CAAnB,EAAsB;cACZ,IAAIJ,KAAJ,CAAU,uDAAV,CAAN;;QAEAK,aAAa,CAAjB,EAAoB;cACV,IAAIL,KAAJ,CAAU,gDAAV,CAAN;;;aAGKM,SAAT,GAAqB;eACVd,YAAYO,KAAZ,CAAkBG,GAAlB,EAAuBC,YAAvB,CAAP;;;QAGAC,iBAAiB,CAArB,EAAwB;eACbE,WAAP;;;WAGG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;iBAC3BC,OAAT,CAAiBC,QAAjB,EAA2B;oBACfA,QAAR;;iBAEKC,OAAT,CAAiBC,KAAjB,EAAwB;;gBAEhBT,YAAJ,EAAkB;2BACHU,cAAX,EAA2BT,UAA3B;aADJ,MAGK;uBACMQ,KAAP;;;iBAGCE,YAAT,CAAsBC,UAAtB,EAAkC;mBACvBA,UAAP;;iBAEKF,cAAT,GAA0B;mBACfR,YACFW,IADE,CACGP,OADH,EAEFQ,KAFE,CAEIN,OAFJ,EAGFM,KAHE,CAGIH,YAHJ,CAAP;;;KAjBD,CAAP;CAhBJ;;;;"}